# This is an example Nginx configuration to proxy requests to your Flask app running llmapi.py.
# The Flask app should be running on the port specified in llmapi.py (in this example, port 6000).
# This configuration ensures:
# 1. HTTPS is enforced (port 443) and traffic from port 80 is redirected.
# 2. Only requests to `/chat` are allowed and proxied to the LLM API server.
# 3. All other requests are denied with a 404 error.
# Assuming you have installed NGINX and need to create a sites-available file: /etc/nginx/sites-available/llm_flask
# Paste the below:


server {
    listen 443 ssl;
    server_name your-domain.com;

    # SSL configuration using Certbot-generated certificates
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem; # Managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem; # Managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Proxy requests only to the /chat endpoint
    location /chat {
        proxy_pass http://192.168.1.10:6000; # Replace with your LLM API server IP/port (can also be localhost if on the same machine)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Deny all other paths
    location / {
        return 404;
    }
}

# Redirect all HTTP requests (port 80) to HTTPS (port 443)
server {
    listen 80;
    server_name your-domain.com;
    
    return 301 https://$host$request_uri;
}

    listen 80;
    server_name your-domain.com;
    return 404; # managed by Certbot
}
